"""
Django settings for assessment project.

Generated by 'django-admin startproject' using Django 1.10.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os
from session_cleanup.settings import weekly_schedule
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '8-^vr)cxd*&d&)q6qa96drisay0fazd7-k9v^ysijca4__+_aj'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ALLOWED_HOSTS = ['127.0.0.1','localhost']
ALLOWED_HOSTS = ['*']

CSRF_FAILURE_VIEW='assessproject.mycsrf.csrf_failure'
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'assessproject',
    'session_cleanup',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'assessment.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR+r'\templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
WSGI_APPLICATION = 'assessment.wsgi.application'

PASSWORD_HASHERS = (
    # 'MyApp.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
    'django.contrib.auth.hashers.BCryptPasswordHasher',
    'django.contrib.auth.hashers.SHA1PasswordHasher',
    'django.contrib.auth.hashers.MD5PasswordHasher',
    'django.contrib.auth.hashers.CryptPasswordHasher',
)

# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'assessment',
        'USER':'root',
        'PASSWORD':'123456',
        'HOST':'',
        'PORT':'3306',
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/


DEFAULT_CHARSET = 'utf-8'
LANGUAGE_CODE = 'zh_Hans'
TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR+r'\static'
STATICFILES_DIRS = (
    ('css',STATIC_ROOT+r'\css' ),  
    ('js',STATIC_ROOT+r'\js' ),  
    ('photo',STATIC_ROOT+r'\photo' ),  
#     ('images',os.path.join(STATIC_ROOT,'images').replace('\\','/') ),
#     ('upload',os.path.join(STATIC_ROOT,'upload').replace('\\','/') ),

 )
# ALLOWED_HOSTS = ['127.0.0.1', 'localhost']
MEDIA_ROOT= BASE_DIR+r'\media'

# Clean the sessions periodicly
CELERYBEAT_SCHEDULE = {
    'session_cleanup': weekly_schedule
}
# SESSION_COOKIE_NAME = 'luosessionid'
# LANGUAGE_COOKIE_NAME = 'language_cookie'
# X_FRAME_OPTIONS = 'lianfeng'
# CSRF_COOKIE_NAME = 'luocsrftoken'
# CSRF_COOKIE_SECURE = True
CSRF_COOKIE_HTTPONLY = False
CSRF_COOKIE_AGE = 60 * 60 
SESSION_COOKIE_AGE= 60 * 60 * 24 * 2
CSRF_USE_SESSIONS=True